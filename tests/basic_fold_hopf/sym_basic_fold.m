function varargout=sym_basic_fold(action,varargin)
%% Automatically generated with matlabFunction
% 
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'ntau'
   varargout{1}=2;
   return
  case 'tp_del'
   varargout{1}=0;
   return
  case 'maxorder'
   varargout{1}=5;
   return
  case 'directional_derivative'
   varargout{1}=1;
   return
end
ind=varargin{1};
order=varargin{2};
nout=varargin{3};
f=str2func(sprintf('sym_basic_fold_%s_%d_%d',action,ind,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{4:end});




function [out1,out2] = sym_basic_fold_rhs_1_0(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_0
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_0(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:22

out1 = p+x2_3.*(tau1-1.0)-x1_3.*x2_2.^2;
if nargout > 1
    out2 = x1_1-x2_1;
end


function [out1,out2] = sym_basic_fold_rhs_1_1(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_1
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_1(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:22

out1 = p_d+tau1_d.*x2_3+x2_3_d.*(tau1-1.0)-x2_2.^2.*x1_3_d-x1_3.*x2_2.*x2_2_d.*2.0;
if nargout > 1
    out2 = x1_1_d-x2_1_d;
end


function [out1,out2] = sym_basic_fold_rhs_1_2(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_2
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_2(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:22

out1 = tau1_d.*x2_3_d.*2.0-x1_3.*x2_2_d.^2.*2.0-x2_2.*x1_3_d.*x2_2_d.*4.0;
if nargout > 1
    out2 = 0.0;
end


function [out1,out2] = sym_basic_fold_rhs_1_3(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_3
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_3(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:23

out1 = x1_3_d.*x2_2_d.^2.*-6.0;
if nargout > 1
    out2 = 0.0;
end


function [out1,out2] = sym_basic_fold_rhs_1_4(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_4
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_4(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:23

out1 = 0.0;
if nargout > 1
    out2 = 0.0;
end


function [out1,out2] = sym_basic_fold_rhs_1_5(x1_1,x2_1,x1_2,x2_2,x1_3,x2_3,p,tau1,tau2,x1_1_d,x2_1_d,x1_2_d,x2_2_d,x1_3_d,x2_3_d,p_d,tau1_d,tau2_d)
%SYM_BASIC_FOLD_RHS_1_5
%    [OUT1,OUT2] = SYM_BASIC_FOLD_RHS_1_5(X1_1,X2_1,X1_2,X2_2,X1_3,X2_3,P,TAU1,TAU2,X1_1_D,X2_1_D,X1_2_D,X2_2_D,X1_3_D,X2_3_D,P_D,TAU1_D,TAU2_D)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    26-Sep-2018 21:21:23

out1 = 0.0;
if nargout > 1
    out2 = 0.0;
end

